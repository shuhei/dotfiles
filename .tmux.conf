# Remap prefix to Control + s
set -g prefix C-s
unbind-key C-b
bind-key C-s send-prefix

# Force a reload of the config file
unbind-key r
bind-key r source-file ~/.tmux.conf\; display-message "~/.tmux.conf reloaded"

# Quick pane cycling
# Double Ctrl+S cycles panes in a window
unbind-key ^S
bind-key ^S select-pane -t :.+

# 256 Color
set -g default-terminal "screen-256color"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
unbind-key -T copy-mode-vi v
unbind-key -T copy-mode-vi y
unbind-key -T copy-mode-vi C-v
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

# Update default binding of `Enter` to also use copy-pipe
unbind-key -T copy-mode-vi Enter

# Open new window with current directory
unbind-key '"'
unbind-key %
unbind-key c
bind-key '"' split-window -c "#{pane_current_path}"
bind-key % split-window -h -c "#{pane_current_path}"
bind-key c new-window -c "#{pane_current_path}"

# Navigate tmux panes & vim windows by C-s h/j/k/l
# https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
unbind-key h
unbind-key j
unbind-key k
unbind-key l
bind-key h if-shell "$is_vim" "send-keys C-w h" "select-pane -L"
bind-key j if-shell "$is_vim" "send-keys C-w j" "select-pane -D"
bind-key k if-shell "$is_vim" "send-keys C-w k" "select-pane -U"
bind-key l if-shell "$is_vim" "send-keys C-w l" "select-pane -R"

# Resize split panes with < >
unbind-key <
unbind-key >
bind-key < resize-pane -L 10
bind-key > resize-pane -R 10

# Resize split panes with arrow keys
unbind-key Left
unbind-key Down
unbind-key Up
unbind-key Right
bind-key Left if-shell "$is_vim" "send-keys C-w h" "select-pane -L"
bind-key Down if-shell "$is_vim" "send-keys C-w j" "select-pane -D"
bind-key Left resize-pane -L 10
bind-key Right resize-pane -R 10
bind-key Up resize-pane -U 10
bind-key Down resize-pane -D 10

# Navigate tmux windows by C-s [/]
unbind-key n
unbind-key [
unbind-key ]
bind-key [ previous-window
bind-key ] next-window

# Enter copy mode by C-s p
# Enter copy mode from one page up by C-s C-u
unbind-key p
unbind-key C-u
bind-key p copy-mode
bind-key C-u copy-mode -eu

# Remove delay for ESC key
# http://unix.stackexchange.com/questions/23138/esc-key-causes-a-small-delay-in-terminal-due-to-its-alt-behavior
set -s escape-time 0

# Prevent tmux from exiting with Ctrl+D
# https://superuser.com/questions/479600/how-can-i-prevent-tmux-exiting-with-ctrl-d/1048864
set-environment -g 'IGNOREEOF' 10

# tmux focus mode
# https://superuser.com/questions/1261810/creating-a-focus-mode-for-tmux-one-centered-pane-flanked-by-two-blank-panes
bind-key C-g run-shell -b 'TMUX_PANE="#{pane_id}" TMUX_M_COLUMNS=120 _tmux-margins c "#{pane_id}"'
bind-key C-d run-shell -b 'TMUX_PANE="#{pane_id}" _tmux-margins d "#{pane_id}"'
unbind-key -
unbind-key +
bind-key - run-shell -b 'TMUX_PANE="#{pane_id}" _tmux-margins - "#{pane_id}"'
bind-key = run-shell -b 'TMUX_PANE="#{pane_id}" _tmux-margins + "#{pane_id}"'

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'

# Use the default shell (zsh, etc.)
set-option -g default-command "${SHELL}"

run '~/.tmux/plugins/tpm/tpm'

# Load platform-specific configs
if-shell 'uname | grep -q Darwin' \
  'source-file ~/dotfiles/.tmux.mac.conf' \
  'source-file ~/dotfiles/.tmux.linux.conf'

# Load color theme. The file is generated by the `colorscheme` command.
source-file ~/dotfiles/.tmux.color.conf
